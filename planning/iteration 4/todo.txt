
DONE:

step 1: experimenting
1. install helm 
2. install cluster on minikube  
3. try out simple script outside of jobs manager 
4. try to expose ilum-core and use basic curl to use get requests
5. write a more complex spring boot app to submit and execute job

step 2: creating job resource
6. plan - what exactly method should i create

step 3: creating job manager - component responsible for talking to ilum-core

step 4: create api

step 5: create scheduler and logic for job queue management

TODO:

step 6: - testing job

How it should work?
In the library test-job-creator should use @TestJobNode annotation
    This annotation validates only class that in its run method will return a of certain format - this string should contains data about
    how effective and valid is the data generated in the kafka channel
    Along with that, it should take as arguments or configs the time stamp - start and end time between which it should listen for
    chosen channel (or other arguments, in case when data is actually stored in s3 container for example)
In the jobs manager we do the next:
    1. when the job finishes it work, in scheduler we start running test job and wait till it ends
    2. then we take its result and create some record object, which contains evaluation
    3. after that we move on to the next job



How should it work ?
When the current job finishes its work, the quartz notices it and activates closing quartzJob
This job should start the testing job in the same job. 
    This testing job is reading the history of all channels (the channels should contain only messages generated by the job)
    Into single dataset ( in order to analise all the data at once)
After that when it finishes it returns certain value

Meanwhile, the quartz job should launch new quartzJob, which goal is to monitor the test job
When testJob finishes, new quartzJob 
    reads the test job results
    clears the channels
    launches new job
    launches first quartzJob, starting the loop again

How to implement this?
A. Write the annotations and logic for reading the kafka channel into a signle dataset in the jobs_connection_lib
B. Write method to clear the channels
C. Change 2-nd quartz job to launch the test job
D. Write 3-rd quartz job to monitor the test job
E. Write 4-th quartz job to get the result,, clear channels, launch new job and start the loop again

